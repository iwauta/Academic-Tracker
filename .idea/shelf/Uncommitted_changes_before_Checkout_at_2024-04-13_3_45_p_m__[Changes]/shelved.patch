Index: src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui.util;\r\n\r\nimport ca.ucalgary.groupprojectgui.Data;\r\nimport ca.ucalgary.groupprojectgui.objects.Assignment;\r\nimport ca.ucalgary.groupprojectgui.objects.Course;\r\nimport ca.ucalgary.groupprojectgui.objects.Exam;\r\nimport ca.ucalgary.groupprojectgui.objects.Project;\r\n\r\nimport java.io.*;\r\nimport java.util.Arrays;\r\n\r\n/**\r\n * WriteFile.java - stores the data onto a file.\r\n */\r\npublic class FileSaver {\r\n\r\n    /**\r\n     * ca.ucalgary.groupprojectgui.Main structure of the class\r\n     * @return true if data stored successfully or false otherwise\r\n     */\r\n    public static boolean save(File file, Data data){\r\n\r\n        try (FileWriter fw = new FileWriter(file)) {\r\n            fw.write(\"Courses\\n\");\r\n            for (Course course : data.getAllCourses()) {\r\n                fw.write(String.format(\"%s, %s, %s, %s, %s\\n\", course.getCourseName(), course.getProfName(), course.getProfEmail(), course.getTargetGrade(), course.isInProgress()));\r\n\r\n            }\r\n            fw.write(\"Projects\\n\");\r\n            for (Project project : data.getAllProjects()) {\r\n                String completion;\r\n                if (project.isProjectComplete()) {\r\n                    completion = \"Complete\";\r\n                } else {\r\n                    completion = \"Incomplete\";\r\n                }\r\n\r\n                if (project instanceof Exam exam) {\r\n                    String deadline = ArrayToString(Arrays.toString(exam.getProjectDeadline()));\r\n                    fw.write(String.format(\"%s, %s, %s, %s, %s, %s\\n\", exam.getCourseName(), exam.getProjectName(), exam.getProjectWeight(), deadline, exam.getLocation(), exam.getReviewTopics()));\r\n                } else if (project instanceof Assignment assignment) {\r\n                    String deadline = ArrayToString(Arrays.toString(assignment.getProjectDeadline()));\r\n                    fw.write(String.format(\"%s, %s, %s, %s, %s\\n\", assignment.getCourseName(), assignment.getProjectName(), assignment.getProjectWeight(), deadline, assignment.getSpecialInstructions()));\r\n                }\r\n            }\r\n            return true;\r\n\r\n        } catch (IOException ioe) {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    private static String ArrayToString(String string) {\r\n\r\n        string = string.replace(\"[\", \"\").replace(\"]\", \"\");\r\n        string = string.replace(\",\", \"\");\r\n\r\n        return string;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java b/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java	(date 1713044630542)
@@ -23,7 +23,7 @@
         try (FileWriter fw = new FileWriter(file)) {
             fw.write("Courses\n");
             for (Course course : data.getAllCourses()) {
-                fw.write(String.format("%s, %s, %s, %s, %s\n", course.getCourseName(), course.getProfName(), course.getProfEmail(), course.getTargetGrade(), course.isInProgress()));
+                fw.write(String.format("%s, %s, %s, %s, %s\n", course.getCourseName(), course.getProfName(), course.getProfEmail(), course.getTargetGrade(), Boolean.toString(course.isInProgress())));
 
             }
             fw.write("Projects\n");
Index: src/main/java/ca/ucalgary/groupprojectgui/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui;\r\n\r\nimport ca.ucalgary.groupprojectgui.objects.Assignment;\r\nimport ca.ucalgary.groupprojectgui.objects.Course;\r\nimport ca.ucalgary.groupprojectgui.objects.Exam;\r\nimport ca.ucalgary.groupprojectgui.objects.Project;\r\nimport ca.ucalgary.groupprojectgui.util.FileLoader;\r\nimport ca.ucalgary.groupprojectgui.util.FileSaver;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport java.time.LocalDate;\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\n\r\npublic class HelloController {\r\n\r\n    Data data = new Data();\r\n\r\n    private String defaultDirectory = \"data.csv\";\r\n\r\n    @FXML\r\n    private Label status;\r\n\r\n    // course details ////////\r\n    @FXML\r\n    private TableView<CourseModel> courseTableView;\r\n\r\n    @FXML\r\n    private CheckBox inProgressOnlyCheckBox;\r\n\r\n    // List of models of Course objects\r\n    private ArrayList<CourseModel> courseData;\r\n\r\n    @FXML\r\n    private TableColumn<CourseModel, String> courseNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CourseModel, String> profNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CourseModel, String> profEmailColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CourseModel, String> inProgressColumn;\r\n\r\n\r\n    // project details ///////\r\n    @FXML\r\n    private TableView<ProjectModel> projectTableView;\r\n\r\n    @FXML\r\n    private CheckBox pendingOnlyCheckBox;\r\n\r\n    // List of models of Project objects\r\n    private ArrayList<ProjectModel> projectData;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectCourseNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectWeightColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectDeadlineColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectPendingColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectTypeColumn;\r\n\r\n    @FXML\r\n    private TableColumn<ProjectModel, String> projectSpecialColumn;\r\n\r\n\r\n\r\n\r\n    // Grades\r\n    @FXML\r\n    private TableView<GradeModel> gradeTableView;\r\n\r\n    @FXML\r\n    private CheckBox gradeInProgressOnlyCheckBox;\r\n\r\n    // List of models of Course objects\r\n    private ArrayList<GradeModel> gradeData;\r\n\r\n    @FXML\r\n    private TableColumn<GradeModel, String> gradeCourseNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<GradeModel, String> targetGradeColumn;\r\n\r\n    @FXML\r\n    private TableColumn<GradeModel, String> actualGradeColumn;\r\n\r\n\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        data = new Data();\r\n        // Associate columns with model properties (Courses)\r\n        courseNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"courseName\"));\r\n        profNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"profName\"));\r\n        profEmailColumn.setCellValueFactory(new PropertyValueFactory<>(\"profEmail\"));\r\n        inProgressColumn.setCellValueFactory(new PropertyValueFactory<>(\"inProgress\"));\r\n\r\n        // Associate columns with model properties (Projects)\r\n        projectTypeColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectType\"));\r\n        projectNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectName\"));\r\n        projectWeightColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectWeight\"));\r\n        projectDeadlineColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectDeadline\"));\r\n        projectSpecialColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectSpecial\"));\r\n        projectPendingColumn.setCellValueFactory(new PropertyValueFactory<>(\"projectPending\"));\r\n\r\n        // Associate columns with model properties (Grades)\r\n        gradeCourseNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"courseName\"));\r\n        targetGradeColumn.setCellValueFactory(new PropertyValueFactory<>(\"targetGrade\"));\r\n        actualGradeColumn.setCellValueFactory(new PropertyValueFactory<>(\"actualGrade\"));\r\n\r\n        // Populate TableView with data&initialize the table\r\n        courseData = generateCourseTableContents(false);\r\n        courseTableView.getItems().addAll(courseData);\r\n        projectData = generateProjectTableContents(false);\r\n        projectTableView.getItems().addAll(projectData);\r\n        gradeData = generateGradeTableContents(false);\r\n        gradeTableView.getItems().addAll(gradeData);\r\n\r\n    }\r\n\r\n\r\n    // Courses\r\n\r\n    /**\r\n     * Constructs a course entered by the user\r\n     * Tales user to new stage to add course details\r\n     * @param actionEvent user selects \"Add Course\"\r\n     */\r\n    @FXML\r\n    void addCourse(ActionEvent actionEvent) {\r\n        Stage stage = new Stage();\r\n        VBox newRoot = new VBox();\r\n\r\n        TextField courseNameTextField = new TextField();\r\n        courseNameTextField.setPromptText(\"Enter the course name:\");\r\n        TextField profNameTextField = new TextField();\r\n        profNameTextField.setPromptText(\"Enter the professor's name:\");\r\n        TextField profEmailTextField = new TextField();\r\n        profEmailTextField.setPromptText(\"Enter the professor's email address (ending in @ucalgary.ca):\");\r\n        TextField targetGradeTextField = new TextField();\r\n        targetGradeTextField.setPromptText(\"Enter your target grade for this course:\");\r\n\r\n        Button add = new Button(\"Add Course\");\r\n        add.setOnAction(event -> {\r\n            boolean success = constructCourse(courseNameTextField.getText(), profNameTextField.getText(),\r\n                    profEmailTextField.getText(), targetGradeTextField.getText());\r\n            if (success) {\r\n                // Successfully added a course, update the list\r\n                updateCourseList();\r\n                stage.close();\r\n            }\r\n        });\r\n\r\n        Button cancel = new Button(\"Cancel\");\r\n        cancel.setOnAction(event -> stage.close());\r\n\r\n        newRoot.getChildren().addAll(courseNameTextField, profNameTextField, profEmailTextField,\r\n                targetGradeTextField, add, cancel);\r\n\r\n        Scene newScene = new Scene(newRoot, 400, 400);\r\n        stage.setScene(newScene);\r\n        stage.setTitle(\"Add a course:\");\r\n        stage.show();\r\n    }\r\n\r\n    /**\r\n     * Constructs a course object based on user input; update status based on errors if there was any.\r\n     * @return true if adding a course was successful or false otherwis\r\n     */\r\n    private boolean constructCourse(String courseName, String profName, String profEmail, String targetGrade) {\r\n        final int MIN_LENGTH = 6;\r\n        final int MAX_LENGTH = 7;\r\n        Double target;\r\n        // Empty input\r\n        if (courseName.isEmpty() || profName.isEmpty() || profEmail.isEmpty() || targetGrade.isEmpty()) {\r\n            errorStatus(\"Invalid input. Make sure no fields are empty.\");\r\n            return false;\r\n        }\r\n        courseName = courseName.replace(\" \", \"\"); // Remove all spaces\r\n        courseName = courseName.toUpperCase();\r\n        profEmail = profEmail.toLowerCase();\r\n        // Course name too short or too long\r\n        if (courseName.length() < MIN_LENGTH || courseName.length() > MAX_LENGTH) {\r\n            errorStatus(\"Invalid course name.\");\r\n            return false;\r\n        } else if (!profEmail.endsWith(\"@ucalgary.ca\")) {\r\n            errorStatus(\"Invalid email address.\");\r\n            return false;\r\n        } else if (data.checkExistCourse(courseName)) {\r\n            errorStatus(\"Course already tracked.\");\r\n            return false;\r\n        }\r\n        try {\r\n            target = Double.parseDouble(targetGrade);\r\n            if (target < 0 || target > 100) {\r\n                errorStatus(\"Invalid target grade.\");\r\n                return false;\r\n            }\r\n        } catch (NumberFormatException e) {\r\n            errorStatus(\"Invalid target grade. Please enter a number.\");\r\n            return false;\r\n        }\r\n\r\n        // Adding course\r\n        try {\r\n            boolean success= data.storeNewCourse(courseName, profName, profEmail, target);\r\n            if(success) {\r\n                successStatus(\"Course stored.\");\r\n                return true;\r\n            }\r\n        } catch (Exception e) {\r\n            errorStatus(\"Could not store course.\");\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @FXML\r\n    void closeCourse(ActionEvent actionEvent){\r\n        Stage stage = new Stage();\r\n        VBox newRoot = new VBox();\r\n\r\n        Label label = new Label(\"Course to close:\");\r\n        ChoiceBox<String> courseChoiceBox = new ChoiceBox();\r\n        // select course\r\n        ArrayList<Course> courses = data.getInProgressCourses();\r\n        String courseName;\r\n        for (Course course : courses) {\r\n            if (course.isInProgress()) {\r\n                courseName = course.getCourseName().toUpperCase();\r\n                courseChoiceBox.getItems().add(courseName);\r\n            }\r\n        }\r\n        Button closeCourseButton = new Button(\"Close\");\r\n        closeCourseButton.setOnAction(event -> {\r\n            courseClosure(courseChoiceBox.getValue());\r\n            stage.close();\r\n        });\r\n        Button cancel = new Button(\"Cancel\");\r\n        cancel.setOnAction(event -> stage.close());\r\n        newRoot.getChildren().addAll(label,courseChoiceBox,closeCourseButton,cancel);\r\n        Scene newScene = new Scene(newRoot, 400, 400);\r\n        stage.setScene(newScene);\r\n        stage.setTitle(\"Close a course:\");\r\n        stage.show();\r\n    }\r\n\r\n    /**\r\n     * Close a course\r\n     * @param courseName name of the course to close\r\n     */\r\n    private void courseClosure(String courseName){\r\n        if(courseName.isEmpty()){\r\n            errorStatus(\"Please select a course.\");\r\n            return;\r\n        }\r\n        for(Course course: data.getAllCourses()){\r\n            if(course.getCourseName().equals(courseName)){\r\n                course.closeCourse();\r\n                successStatus(courseName+\" closed.\");\r\n                continue;\r\n            }\r\n        }\r\n        updateCourseList();\r\n    }\r\n\r\n    /**\r\n     * Controls list of Course models for the\r\n     * @param inProgressOnly want to display in-progress courses only(true) or not\r\n     * @return list of CourseControllers\r\n     */\r\n    private ArrayList<CourseModel> generateCourseTableContents(boolean inProgressOnly){\r\n        ArrayList<Course> courses = new ArrayList<>();\r\n        // ArrayList of CourseModels to return\r\n        ArrayList<CourseModel> courseModels = new ArrayList<>();\r\n        if(inProgressOnly) {\r\n            for (Course course : data.sortCourses()) {\r\n                if (course.isInProgress()) { // course is in-progress\r\n                    courses.add(course); // add from the list\r\n                }\r\n            }\r\n        } else {\r\n            for (Course course : data.sortCourses()) {\r\n                courses.add(course); // add from the list\r\n\r\n            }\r\n        }\r\n        // Add to the list to return\r\n        for (Course course : courses) {\r\n            String inProgress;\r\n            if(course.isInProgress()){\r\n                inProgress = \"IN-PROGRESS\";\r\n            } else{\r\n                inProgress = \"CLOSED\";\r\n            }\r\n            CourseModel courseModel = new CourseModel(course.getCourseName(), course.getProfName(), course.getProfEmail(), inProgress);\r\n            courseModels.add(courseModel);\r\n        }\r\n\r\n        return courseModels;\r\n    }\r\n\r\n    /**\r\n     * Updates the course list\r\n     */\r\n    private void updateCourseList() {\r\n        // Clear the existing items in the TableView\r\n        courseTableView.getItems().clear();\r\n        courseData.clear();\r\n        // Show In-Progress courses only\r\n        if(inProgressOnlyCheckBox.isSelected()){\r\n            courseData = generateCourseTableContents(true);\r\n        } else{ // show all the courses\r\n            courseData = generateCourseTableContents(false);\r\n        }\r\n        updateGradeList();\r\n        courseTableView.getItems().addAll(courseData);\r\n    }\r\n\r\n    /**\r\n     * Updates the table when user checks on/off the checkbox\r\n     * @param event checking on/off the checkbox\r\n     */\r\n    @FXML\r\n    void checkInProgressOnly(ActionEvent event){\r\n        updateCourseList();\r\n    }\r\n\r\n\r\n\r\n    // Projects\r\n\r\n    /**\r\n     * Tales user to new stage to add course details\r\n     * @param actionEvent user selects \"Add Course\"\r\n     */\r\n    @FXML\r\n    void addProject(ActionEvent actionEvent) {\r\n        // new scene opens to construct a course\r\n        Stage stage = new Stage();\r\n        VBox newRoot = new VBox();\r\n\r\n        ChoiceBox<String> courseChoiceBox = new ChoiceBox();\r\n        ChoiceBox<String> projectTypeChoiceBox = new ChoiceBox();\r\n        DatePicker projectDeadlineDatePicker = new DatePicker();\r\n        TextField examLocationTF = new TextField();\r\n\r\n        // select course\r\n        ArrayList<Course> courses = data.getInProgressCourses();\r\n        String courseName;\r\n        for (Course course : courses) {\r\n            if (course.isInProgress()) {\r\n                courseName = course.getCourseName().toUpperCase();\r\n                courseChoiceBox.getItems().add(courseName);\r\n            }\r\n        }\r\n        // select project type\r\n        projectTypeChoiceBox.getItems().addAll(\"EXAM\", \"ASSIGNMENT\");\r\n\r\n        // get user inputs\r\n        TextField projectNameTextField = new TextField();\r\n        projectNameTextField.setPromptText(\"Enter the project name:\");\r\n\r\n        TextField projectWeightTextField = new TextField();\r\n        projectWeightTextField.setPromptText(\"Enter the project weight:\");\r\n\r\n        TextField projectLocationTextFiled = new TextField();\r\n        projectLocationTextFiled.setPromptText(\"Enter the location of the exam:\");\r\n\r\n        TextField projectReviewTopicsTextFiled = new TextField();\r\n        projectReviewTopicsTextFiled.setPromptText(\"Enter the topics of the exam:\");\r\n\r\n        TextField projectSpecialInstructionsTextFiled = new TextField();\r\n        projectSpecialInstructionsTextFiled.setPromptText(\"Enter the special instructions of the exam:\");\r\n\r\n        Button add = new Button(\"Add Project\");\r\n        add.setOnAction(event -> {\r\n            boolean success = constructProject(courseChoiceBox.getValue(), projectNameTextField.getText(), projectTypeChoiceBox.getValue(),projectWeightTextField.getText(), projectDeadlineDatePicker.getValue(),projectLocationTextFiled.getText(),projectReviewTopicsTextFiled.getText(),projectSpecialInstructionsTextFiled.getText());\r\n            if (success) {\r\n                // Successfully added a project, update the list\r\n                updateProjectList();\r\n                stage.close();\r\n            }\r\n        });\r\n        Button cancel = new Button(\"Cancel\");\r\n        cancel.setOnAction(event -> stage.close()); // cancel exists course constructor\r\n        newRoot.getChildren().addAll(courseChoiceBox, projectTypeChoiceBox, projectNameTextField, projectWeightTextField, projectDeadlineDatePicker,projectLocationTextFiled,projectReviewTopicsTextFiled,projectSpecialInstructionsTextFiled, add, cancel);\r\n\r\n        Scene newScene = new Scene(newRoot, 400, 400);\r\n        stage.setScene(newScene);\r\n        stage.setTitle(\"Add a Project:\");\r\n        stage.show();\r\n    }\r\n\r\n    /**\r\n     * Constructs a project object based on user input\r\n     */\r\n    private boolean constructProject(String courseName, String projectName, String projectType, String projectWeight, LocalDate projectDeadline, String location, String reviewTopics, String specialInstructions) {\r\n        double weight;\r\n        int[] deadline;\r\n\r\n        if (courseName.isEmpty() || projectType.isEmpty() || projectWeight.isEmpty()) {\r\n            errorStatus(\"Invalid input. Make sure no fields are empty.\");\r\n            return false;\r\n        } else if (data.checkProjectExistInCourse(courseName, projectName)) {\r\n            errorStatus(\"Project already exists in course.\");\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            weight = Double.parseDouble(projectWeight);\r\n            // Convert LocalDate to an array of integers [day,month,year]\r\n            deadline = new int[]{projectDeadline.getDayOfMonth(), projectDeadline.getMonthValue(), projectDeadline.getYear()};\r\n        } catch (NumberFormatException e) {\r\n            errorStatus(\"Could not parse integer project weight.\");\r\n            return false;\r\n        }\r\n\r\n        if (weight < 0 || weight > 100) {\r\n            errorStatus(\"Invalid project weight.\");\r\n            return false;\r\n        }\r\n\r\n        // Adding EXAM\r\n        if (projectType.equals(\"EXAM\")) {\r\n            try {\r\n                if (location.isEmpty()){\r\n                    location = null;\r\n                }\r\n                if(reviewTopics.isEmpty()){\r\n                    reviewTopics = null;\r\n                }\r\n\r\n                boolean success = data.storeNewExam(courseName, projectName, weight, deadline,location, reviewTopics);\r\n                if(success){\r\n                    successStatus(\"Exam stored.\");\r\n                }\r\n                else{\r\n                    errorStatus(\"Something went wrong.\");\r\n                }\r\n                return success;\r\n            } catch (Exception e) {\r\n                errorStatus(\"Could not store exam.\");\r\n                return false;\r\n            }\r\n\r\n        } // Adding ASSIGNMENT\r\n        else {\r\n            try {\r\n                if(specialInstructions.isEmpty()){\r\n                    specialInstructions = null;\r\n                }\r\n                boolean success = data.storeNewAssignment(courseName, projectName, weight, deadline, specialInstructions);\r\n                if(success){\r\n                    successStatus(\"Assignment stored.\");\r\n                }\r\n                return success;\r\n            } catch (Exception e) {\r\n                errorStatus(\"Could not store assignment\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mark project complete, update the table\r\n     * @param actionEvent park project complete button clicked\r\n     */\r\n    @FXML\r\n    void closeProject(ActionEvent actionEvent){\r\n        Stage stage = new Stage();\r\n        VBox newRoot = new VBox();\r\n\r\n        Label label = new Label(\"Project to mark complete:\");\r\n        ChoiceBox<String> courseChoiceBox = new ChoiceBox();\r\n        // select course\r\n        ArrayList<Course> courses = data.getInProgressCourses();\r\n        String courseName;\r\n        for (Course course : courses) {\r\n            if (course.isInProgress()) {\r\n                courseName = course.getCourseName().toUpperCase();\r\n                courseChoiceBox.getItems().add(courseName);\r\n            }\r\n        }\r\n\r\n        ChoiceBox<String> projectChoiceBox = new ChoiceBox();\r\n        // select course\r\n        ArrayList<Project> projects = data.getAllProjects();\r\n        String projectName;\r\n        for (Project project : projects) {\r\n            projectName = project.getProjectName();\r\n            projectChoiceBox.getItems().add(projectName);\r\n        }\r\n\r\n        Button closeCourseButton = new Button(\"Mark Complete\");\r\n        closeCourseButton.setOnAction(event -> {\r\n            projectCompleter(courseChoiceBox.getValue(),projectChoiceBox.getValue());\r\n            stage.close();\r\n        });\r\n        Button cancel = new Button(\"Cancel\");\r\n        cancel.setOnAction(event -> stage.close());\r\n        newRoot.getChildren().addAll(label,courseChoiceBox,closeCourseButton,cancel);\r\n        Scene newScene = new Scene(newRoot, 400, 400);\r\n        stage.setScene(newScene);\r\n        stage.setTitle(\"Mark Project Complete:\");\r\n        stage.show();\r\n    }\r\n\r\n    /**\r\n     * complete project, update table\r\n     * @param courseName name of the course\r\n     * @param projectName name of the project\r\n     */\r\n    private void projectCompleter(String courseName, String projectName){\r\n        if(!data.checkProjectExistInCourse(courseName,projectName)){\r\n            errorStatus(\"Check information entered.\");\r\n            return;\r\n        }\r\n        for(Project project: data.getAllProjects()){\r\n            if(project.getCourseName().equals(courseName)&&project.getProjectName().equals(projectName)){\r\n                project.setProjectComplete();\r\n                successStatus(projectName + \" for \" + courseName+\" marked complete.\");\r\n                continue;\r\n            }\r\n        }\r\n        updateCourseList();\r\n    }\r\n\r\n    /**\r\n     * Updates the PojectModel list\r\n     */\r\n    private ArrayList<ProjectModel> generateProjectTableContents(boolean pendingOnly){\r\n        ArrayList<Project> projects = data.sortProjects();\r\n        // ArrayList of ProjectModels to return\r\n        ArrayList<ProjectModel> projectModels = new ArrayList<>();\r\n        if(pendingOnly) {\r\n            ArrayList<Project> pendingProjects = new ArrayList<>();\r\n            for (Project project : projects) {\r\n                if (!project.isProjectComplete()) {\r\n                    pendingProjects.add(project);\r\n                }\r\n            }\r\n            projects = pendingProjects;\r\n        }\r\n\r\n        // Add to the list to return\r\n        for (Project project: projects) {\r\n            String pending;\r\n            if(project.isProjectComplete()){\r\n                pending = \"COMPLETE\";\r\n            } else{\r\n                pending = \"PENDING\";\r\n            }\r\n            String courseName = project.getCourseName();\r\n            String projectName = project.getProjectName();\r\n            String weight = String.valueOf(project.getProjectWeight());\r\n            String deadline = project.deadlineToString();\r\n            String type = \"\";\r\n            String special= \"\";\r\n            if(project instanceof Exam){\r\n                type = \"E\";\r\n                special = String.format(\"Location: %s, Topics: %s\", ((Exam) project).getLocation(), ((Exam) project).getReviewTopics());\r\n            } else if (project instanceof Assignment){\r\n                type = \"A\";\r\n                special = String.format(\"Instruction: %s\", ((Assignment) project).getSpecialInstructions());\r\n            }\r\n            ProjectModel projectModel = new ProjectModel(projectName,courseName,weight,deadline,type,special,pending);\r\n            projectModels.add(projectModel);\r\n        }\r\n        return projectModels;\r\n    }\r\n\r\n    /**\r\n     * Updates the table of projects\r\n     */\r\n    private void updateProjectList(){\r\n        // Clear the existing items in the TableView\r\n        projectTableView.getItems().clear();\r\n        projectData.clear();\r\n        // Show In-Progress courses only\r\n        if(pendingOnlyCheckBox.isSelected()){\r\n            projectData = generateProjectTableContents(true);\r\n        } else{ // show all the courses\r\n            projectData = generateProjectTableContents(false);\r\n        }\r\n        // Add all the items to the TableView\r\n        projectTableView.getItems().addAll(projectData);\r\n        // Refresh the TableView\r\n        projectTableView.refresh();\r\n    }\r\n\r\n    /**\r\n     * Updates the table when user checks on/off the checkbox\r\n     * @param event checking on/off the checkbox\r\n     */\r\n    @FXML\r\n    void checkPendingOnly(ActionEvent event){\r\n        updateProjectList();\r\n    }\r\n\r\n\r\n    // Grades\r\n\r\n    /**\r\n     * Generates models for grade\r\n     * @param inProgressOnly true if in-progress courses only or false otherwise\r\n     * @return models of grades for the table\r\n     */\r\n    private ArrayList<GradeModel> generateGradeTableContents(boolean inProgressOnly){\r\n        ArrayList<Course> courses = new ArrayList<>();\r\n        // ArrayList of CourseModels to return\r\n        ArrayList<GradeModel> gradeModels = new ArrayList<>();\r\n        if(inProgressOnly) {\r\n            for (Course course : data.sortCourses()) {\r\n                if (course.isInProgress()) { // course is in-progress\r\n                    courses.add(course); // add from the list\r\n                }\r\n            }\r\n        } else {\r\n            for (Course course : data.sortCourses()) {\r\n                courses.add(course); // add from the list\r\n\r\n            }\r\n        }\r\n        // Add to the list to return\r\n        for (Course course : courses) {\r\n            String target = String.valueOf(course.getTargetGrade()) + \"%\";\r\n            String actual = String.valueOf(course.getActualGrade()) + \"%\";\r\n            GradeModel gradeModel = new GradeModel(course.getCourseName(), target, actual);\r\n            gradeModels.add(gradeModel);\r\n        }\r\n        return gradeModels;\r\n    }\r\n\r\n    /**\r\n     * Updates the table\r\n     */\r\n    private void updateGradeList(){\r\n        // Clear the existing items in the TableView\r\n        gradeTableView.getItems().clear();\r\n        gradeData.clear();\r\n        // Show In-Progress courses only\r\n        if(gradeInProgressOnlyCheckBox.isSelected()){\r\n            gradeData = generateGradeTableContents(true);\r\n        } else{ // show all the courses\r\n            gradeData = generateGradeTableContents(false);\r\n        }\r\n        // Add all the items to the TableView\r\n        gradeTableView.getItems().addAll(gradeData);\r\n        // Refresh the TableView\r\n        gradeTableView.refresh();\r\n    }\r\n\r\n    /**\r\n     * Updates table if user pressed refresh button\r\n     * @param actionEvent refresh button pressed\r\n     */\r\n    @FXML\r\n    void refreshGradeTable(ActionEvent actionEvent){\r\n        updateGradeList();\r\n    }\r\n\r\n\r\n\r\n    // Status\r\n    /**\r\n     * Shows red error message\r\n     * @param message Error message to print.\r\n     */\r\n    private void errorStatus(String message){\r\n        status.setTextFill(Color.RED);\r\n        status.setText(\"Error! \" + message);\r\n\r\n        // clear the error message after 3 seconds\r\n        Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(3), event -> {\r\n            status.setText(\"\"); // Clear the error message\r\n        }));\r\n        timeline.play();\r\n\r\n    }\r\n\r\n    /**\r\n     * Shows green success message\r\n     * @param message Success message to print.\r\n     */\r\n    private void successStatus(String message){\r\n        status.setTextFill(Color.GREEN);\r\n        status.setText(\"Success! \" + message);\r\n\r\n        // clear the error message after 3 seconds\r\n        Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(3), event -> {\r\n            status.setText(\"\"); // Clear the error message\r\n        }));\r\n        timeline.play();\r\n\r\n    }\r\n\r\n    /**\r\n     * Shows black message\r\n     * @param message Message to print.\r\n     */\r\n    private void neutralStatus(String message){\r\n        status.setTextFill(Color.BLACK);\r\n        status.setText(message);\r\n\r\n        // clear the error message after 3 seconds\r\n        Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(3), event -> {\r\n            status.setText(\"\"); // Clear the error message\r\n        }));\r\n        timeline.play();\r\n    }\r\n\r\n\r\n\r\n    // Menu bar\r\n\r\n    /**\r\n     * Loads the current data from .csv file of user's choice\r\n     * @param event user selects \"File -> Load\"\r\n     */\r\n    @FXML\r\n    void load(ActionEvent event) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Choose File\");\r\n        File selectedFile = fileChooser.showOpenDialog(new Stage()); // Show the file chooser dialog\r\n        if (selectedFile != null) {\r\n            // handle selected file\r\n            try {\r\n                data = FileLoader.load(selectedFile);\r\n                successStatus(\"Loaded file \" + selectedFile.getName());\r\n\r\n            } catch (Exception e) { // Invalid selection\r\n                errorStatus(\"Couldn't save data to \" + selectedFile.getName());\r\n            }\r\n        } else {\r\n            // User canceled the file selection\r\n            neutralStatus(\"File selection cancelled\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Saves the current data in .csv file. (saves to 'data.csv' by default)\r\n     * @param event user selects \"File -> Save\"\r\n     */\r\n    @FXML\r\n    void save(ActionEvent event) {\r\n        File file = new File(defaultDirectory);\r\n        boolean success = FileSaver.save(file, data);\r\n        if (success) {\r\n            status.setTextFill(Color.GREEN);\r\n            status.setText(\"Battle saved to \" + defaultDirectory + \"!\");\r\n        } else {\r\n            status.setTextFill(Color.RED);\r\n            status.setText(\"Error! Couldn't save data to \" + defaultDirectory);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Saves the current data in .csv file of users choice, changes default file to user's choice of file\r\n     */\r\n    @FXML\r\n    void saveAs() {\r\n        try {\r\n            FileChooser fileChooser = new FileChooser();\r\n            File selectedFile = fileChooser.showSaveDialog(new Stage());\r\n            defaultDirectory = selectedFile.getName();\r\n\r\n            boolean success = FileSaver.save(selectedFile, data);\r\n            if (success) {\r\n                status.setTextFill(Color.GREEN);\r\n                status.setText(\"Battle saved to \" + defaultDirectory + \"!\");\r\n            } else {\r\n                status.setTextFill(Color.RED);\r\n                status.setText(\"Error! Couldn't save data to \" + defaultDirectory);\r\n            }\r\n        } catch (Exception e) {\r\n            status.setTextFill(Color.RED);\r\n            status.setText(\"Error! Couldn't save data to \" + defaultDirectory);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provides user with information about GUI's function\r\n     */\r\n    @FXML\r\n    void about() {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(\"About\");\r\n        alert.setHeaderText(\"Course Tracker v\" + HelloApplication.version);\r\n        alert.setContentText(String.format(\"Author: %s%nEmail: %s%nVersion: %s%n%s\", HelloApplication.author, HelloApplication.email, HelloApplication.version, HelloApplication.about));\r\n        // Add OK button\r\n        alert.getButtonTypes().setAll(ButtonType.OK);\r\n        // Show the dialog\r\n        alert.showAndWait();\r\n    }\r\n\r\n    /**\r\n     * Quits the application after confirming with the user.\r\n     */\r\n    @FXML\r\n    void quit() {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setTitle(\"Confirmation\");\r\n        alert.setHeaderText(\"Quit Application\");\r\n        alert.setContentText(\"Are you sure you want to quit?\");\r\n        // Add OK and Cancel buttons\r\n        alert.getButtonTypes().setAll(ButtonType.OK, ButtonType.CANCEL);\r\n        // Show the dialog and handle user's choice\r\n        alert.showAndWait().ifPresent(result -> {\r\n            if (result == ButtonType.OK) {\r\n                // If user chooses OK, exit the application\r\n                Platform.exit();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java b/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java	(date 1713044630536)
@@ -24,6 +24,10 @@
 import java.io.File;
 import java.util.ArrayList;
 
+/**
+ * HelloController - controller for GUI
+ *
+ */
 public class HelloController {
 
     Data data = new Data();
@@ -66,9 +70,6 @@
     // List of models of Project objects
     private ArrayList<ProjectModel> projectData;
 
-    @FXML
-    private TableColumn<ProjectModel, String> projectCourseNameColumn;
-
     @FXML
     private TableColumn<ProjectModel, String> projectNameColumn;
 
@@ -88,8 +89,6 @@
     private TableColumn<ProjectModel, String> projectSpecialColumn;
 
 
-
-
     // Grades
     @FXML
     private TableView<GradeModel> gradeTableView;
@@ -109,8 +108,9 @@
     @FXML
     private TableColumn<GradeModel, String> actualGradeColumn;
 
-
-
+    /**
+     * initialize
+     */
     @FXML
     public void initialize() {
         data = new Data();
@@ -129,7 +129,7 @@
         projectPendingColumn.setCellValueFactory(new PropertyValueFactory<>("projectPending"));
 
         // Associate columns with model properties (Grades)
-        gradeCourseNameColumn.setCellValueFactory(new PropertyValueFactory<>("courseName"));
+        gradeCourseNameColumn.setCellValueFactory(new PropertyValueFactory<>("course"));
         targetGradeColumn.setCellValueFactory(new PropertyValueFactory<>("targetGrade"));
         actualGradeColumn.setCellValueFactory(new PropertyValueFactory<>("actualGrade"));
 
@@ -560,7 +560,7 @@
         if(pendingOnly) {
             ArrayList<Project> pendingProjects = new ArrayList<>();
             for (Project project : projects) {
-                if (!project.isProjectComplete()) {
+                if (project.isProjectComplete()) {
                     pendingProjects.add(project);
                 }
             }
@@ -701,6 +701,11 @@
         }));
         timeline.play();
 
+        // Call updateProjectList() to ensure the table view is initially populated
+        updateCourseList();
+        updateProjectList();
+        updateCourseList();
+
     }
 
     /**
@@ -752,7 +757,9 @@
             try {
                 data = FileLoader.load(selectedFile);
                 successStatus("Loaded file " + selectedFile.getName());
-
+                updateCourseList();
+                updateProjectList();
+                updateGradeList();
             } catch (Exception e) { // Invalid selection
                 errorStatus("Couldn't save data to " + selectedFile.getName());
             }
Index: data.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data.csv b/data.csv
new file mode 100644
--- /dev/null	(date 1713044630533)
+++ b/data.csv	(date 1713044630533)
@@ -0,0 +1,5 @@
+Courses
+MATH300,   a,   a@ucalgary.ca, 90.0, false
+CPSC233, a, a@ucalgary.ca, 80.0, true
+Projects
+MATH300,   E1, 20.0, 24 4 2024,   here,   that
Index: src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui;\r\n\r\npublic class GradeModel {\r\n    private String courseName;\r\n    private String targetGrade;\r\n    private String actualGrade;\r\n\r\n    public GradeModel(String courseName, String targetGrade, String actualGrade){\r\n        this.courseName = courseName;\r\n        this.targetGrade = targetGrade;\r\n        this.actualGrade = actualGrade;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java b/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java	(date 1713044630534)
@@ -1,13 +1,25 @@
 package ca.ucalgary.groupprojectgui;
 
 public class GradeModel {
-    private String courseName;
+    private String course;
     private String targetGrade;
     private String actualGrade;
 
     public GradeModel(String courseName, String targetGrade, String actualGrade){
-        this.courseName = courseName;
+        this.course = courseName;
         this.targetGrade = targetGrade;
         this.actualGrade = actualGrade;
     }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public String getTargetGrade() {
+        return targetGrade;
+    }
+
+    public String getActualGrade() {
+        return actualGrade;
+    }
 }
Index: src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui;\r\n\r\n/**\r\n * Model object of Project (for project table)\r\n */\r\npublic class ProjectModel {\r\n    private String projectName;\r\n    private String projectWeight;\r\n    private String projectDeadline;\r\n    private String projectPending;\r\n    private String projectSpecial;\r\n    private String projectType;\r\n\r\n    public  ProjectModel(String projectName, String courseName, String weight, String deadline, String projectType,String special,String pending){\r\n        this.projectName = String.format(\"%s(%s)\",projectName,courseName);\r\n        this.projectWeight = weight;\r\n        this.projectDeadline = deadline;\r\n        this.projectType = projectType;\r\n        this.projectSpecial = special;\r\n        this.projectPending = pending;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java b/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java	(date 1713044630538)
@@ -1,5 +1,7 @@
 package ca.ucalgary.groupprojectgui;
 
+import javafx.scene.control.cell.PropertyValueFactory;
+
 /**
  * Model object of Project (for project table)
  */
@@ -12,13 +14,32 @@
     private String projectType;
 
     public  ProjectModel(String projectName, String courseName, String weight, String deadline, String projectType,String special,String pending){
-        this.projectName = String.format("%s(%s)",projectName,courseName);
+        this.projectName = String.format("%s (%s)",projectName,courseName);
         this.projectWeight = weight;
         this.projectDeadline = deadline;
         this.projectType = projectType;
         this.projectSpecial = special;
         this.projectPending = pending;
+
     }
 
+    public String getProjectName() {
+        return projectName;
+    }
 
+    public String projectWeight() {
+        return projectWeight;
+    }
+    public String projectDeadline() {
+        return projectDeadline;
+    }
+    public String projectType() {
+        return projectType;
+    }
+    public String projectSpecial() {
+        return projectSpecial;
+    }
+    public String projectPending() {
+        return projectPending;
+    }
 }
Index: src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui.objects; /**\r\n * ca.ucalgary.groupprojectgui.objects.Course.java - represents ca.ucalgary.groupprojectgui.objects.Course otherect with properties regarding the course\r\n */\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class Course implements Comparable<Course> {\r\n\r\n    // Properties\r\n    private String courseName;              // name of the course\r\n    private Professor professor;            // ca.ucalgary.groupprojectgui.objects.Professor otherect (contains info)\r\n    private ArrayList<Project> projects;    // ArrayList of ca.ucalgary.groupprojectgui.objects.Project otherects\r\n    private Double targetGrade,actualGrade; // target/actual grade for the course\r\n    private boolean inProgress;             // status of the course (true - in-progress, false - withdrawn/closed)\r\n\r\n    // Static constants\r\n    // ca.ucalgary.groupprojectgui.objects.Course info formatter\r\n    public static final String COURSE_FORMAT = \"%-11s    %-20s   %-25s    %-17s%n\";\r\n\r\n\r\n    // Constructor...\r\n    /**\r\n     * Constructor method for ca.ucalgary.groupprojectgui.objects.Course otherect. Initializes properties.\r\n     *\r\n     * @param courseName name of the course\r\n     * @param professor professor for this course\r\n     * @param targetGrade target grade for the course\r\n     */\r\n    public Course(String courseName, Professor professor, Double targetGrade) {\r\n        this.courseName = courseName;\r\n        this.professor = professor;\r\n        this.projects = new ArrayList<Project>();\r\n        this.targetGrade = targetGrade;\r\n        this.actualGrade = new Double(0);\r\n        this.inProgress = true;\r\n    }\r\n\r\n\r\n    // Getter methods...\r\n\r\n    /**\r\n     * Getter method for the name of the course\r\n     * @return name of the course\r\n     */\r\n    public String getCourseName() {\r\n        return courseName;\r\n    }\r\n\r\n    /**\r\n     * Getter method for the name of the professor\r\n     * @return professor of this course\r\n     */\r\n    public String getProfName(){\r\n        return professor.getName();\r\n    }\r\n\r\n    /**\r\n     * Getter method for the email address of the professor\r\n     * @return professor of this course\r\n     */\r\n    public String getProfEmail(){\r\n        return professor.getEmail();\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter method for the list of the project\r\n     * @return arrayList of the projects for the course\r\n     */\r\n    public ArrayList<Project> getAllProject() {\r\n        return projects;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter method for the status\r\n     * @return whether the course is ongoing or not\r\n     */\r\n    public boolean isInProgress() {\r\n        return inProgress;\r\n    }\r\n\r\n    /**\r\n     * Getter method for targetGrade.\r\n     * @return targeted grade for the course. If target hasn't been set previously return 0 by default.\r\n     */\r\n    public double getTargetGrade() {\r\n        return targetGrade;\r\n    }\r\n\r\n    /**\r\n     * Getter method for actualGrade. Automatically calculates the grade when called so should be current.\r\n     * @return current grade for the course\r\n     */\r\n    public double getActualGrade() {\r\n        calculateActualGrade();\r\n        return actualGrade;\r\n    }\r\n\r\n\r\n    // Setter methods...\r\n\r\n    /**\r\n     * Setter method for courseName\r\n     * @param courseName name of the course\r\n     */\r\n    public void setCourseName(String courseName){\r\n        this.courseName = courseName;\r\n    }\r\n\r\n    /**\r\n     * Setter method for professor\r\n     * @param professor ca.ucalgary.groupprojectgui.objects.Professor otherect representing the prof of the course\r\n     */\r\n    public void setProfessor(Professor professor){\r\n        this.professor = professor;\r\n    }\r\n\r\n    /**\r\n     * Adds a project to the course\r\n     * @param project ca.ucalgary.groupprojectgui.objects.Project otherect to add to the list\r\n     */\r\n    public void addProject(Project project){\r\n        this.projects.add(project);\r\n    }\r\n\r\n    /**\r\n     * Closes the course (sets the status of the course to not-in-progress.)\r\n     */\r\n    public void closeCourse(){\r\n        this.inProgress = false;\r\n    }\r\n\r\n    /**\r\n     * Sets a target grade for the course.\r\n     * @param targetGrade targeted grade for the course\r\n     */\r\n    public void setTargetGrade(double targetGrade) {\r\n        this.targetGrade = targetGrade;\r\n    }\r\n\r\n///////////// TO DO//////////////////////////////////\r\n    /**\r\n     * Calculates the actual grade for the course using project data. (Called in getActualGrade)\r\n     */\r\n    public void calculateActualGrade() {\r\n        for(Project project: projects){\r\n            actualGrade += project.getProjectWeight()*project.getProjectGrade();\r\n        }\r\n    }\r\n\r\n\r\n    // Overrode methods...\r\n\r\n    /**\r\n     * Represents ca.ucalgary.groupprojectgui.objects.Course otherect as String (Formatted: \"COURSE_NAME\", \"PROF_NAME\",\"PROF_EMAIL\",\"STATUS\"\r\n     * @return\r\n     */\r\n    @Override\r\n    public String toString(){\r\n        // Get withdrawn status\r\n        String status = \"IN-PROGRESS\";\r\n        if(!isInProgress()) { // ca.ucalgary.groupprojectgui.objects.Course is closed\r\n            status = \"CLOSED\";\r\n        } // Print the info for every course stored\r\n        String course = String.format(COURSE_FORMAT, courseName, professor.getName(), professor.getEmail(), status);\r\n        return course;\r\n    }\r\n\r\n    /**\r\n     * Compares two ca.ucalgary.groupprojectgui.objects.Course otherects based on their courseName\r\n     * @param other the otherect to be compared\r\n     * @return returns:\r\n     *      negative if 'this' is less than 'other'\r\n     *      positive if 'this' is larger than 'other'\r\n     *      0 if they are equal (lexicographically)\r\n     */\r\n    @Override\r\n    public int compareTo(Course other) {\r\n        return this.courseName.compareTo(other.courseName);\r\n    }\r\n\r\n\r\n    /**\r\n     * Deep equals. compare contents of the object\r\n     * @param other other object to compare to\r\n     * @return true if the contents are equal or false otherwise\r\n     */\r\n    @Override\r\n    public boolean equals(Object other) {\r\n        if (this == other) {\r\n            return true; // Same reference > true\r\n        }\r\n        if (other == null || getClass() != other.getClass()){\r\n            return false; // other is not ca.ucalgary.groupprojectgui.objects.Course object > false\r\n        }\r\n        Course course = (Course) other; // cast other\r\n        // only true if every property is equal\r\n        return Objects.equals(courseName, course.courseName) &&\r\n                Objects.equals(professor, course.professor) &&\r\n                Objects.equals(targetGrade, course.targetGrade);\r\n    }\r\n\r\n    /**\r\n     * used for equals\r\n     * @return hashed 'this'\r\n     */\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(courseName, professor, targetGrade);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java b/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java	(date 1713044630539)
@@ -132,6 +132,13 @@
         this.inProgress = false;
     }
 
+    /**
+     * set course status to In-Progress
+     */
+    public void setInProgress() {
+        this.inProgress = true;
+    }
+
     /**
      * Sets a target grade for the course.
      * @param targetGrade targeted grade for the course
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d5b992ee-9616-4c97-8ffa-72d485e94cfd\" name=\"Changes\" comment=\"close a project\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPENED&quot;,\r\n    &quot;assignee&quot;: {\r\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\r\n      &quot;username&quot;: &quot;utaha.iwai&quot;,\r\n      &quot;fullname&quot;: &quot;Utaha Iwai&quot;\r\n    }\r\n  }\r\n}</component>\r\n  <component name=\"GitLabMergeRequestsSettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;first&quot;: &quot;https://csgit.ucalgary.ca/dipti.kumar/groupprojectgui.git&quot;,\r\n    &quot;second&quot;: &quot;8f181bb1-ce28-439d-a0af-73b4d108b89e&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2enHchGcTAqmbX9CXFAwL4vGRL4\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Application.HelloApplication.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"ca.ucalgary.groupprojectgui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ca.ucalgary.groupprojectgui.HelloApplication\" />\r\n      <module name=\"GroupProjectGUI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ca.ucalgary.groupprojectgui.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d5b992ee-9616-4c97-8ffa-72d485e94cfd\" name=\"Changes\" comment=\"\" />\r\n      <created>1712533503790</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712533503790</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"initial commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712533912487</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712533912487</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"initial commit pt2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712533940158</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712533940158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"UTAHA'S - menu bar options\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712537888104</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712537888104</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"UTAHA'S - scenebuilder GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712538881023</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712538881023</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"start working on course/project list\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712582362819</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712582362819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Made CourseController to handle the list\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712586506625</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712586506625</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"made method in Data to return info needed for course table\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712588721909</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712588721909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\" add a course to the table\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712593600862</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712593600862</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"construct project (havent dealt with locations, special instructions etc)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712596706564</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712596706564</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Model for project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712602919147</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712602919147</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Model for project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712602933388</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712602933388</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Table not updating\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712605351950</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712605351950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Table not updating\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712605395867</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712605395867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"close a course\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712606511300</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712606511300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"close a project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712607712363</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712607712363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"fcheck\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713044224674</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713044224674</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"17\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"initial commit\" />\r\n    <MESSAGE value=\"initial commit pt2\" />\r\n    <MESSAGE value=\"UTAHA'S - menu bar options\" />\r\n    <MESSAGE value=\"UTAHA'S - scenebuilder GUI\" />\r\n    <MESSAGE value=\"start working on course/project list\" />\r\n    <MESSAGE value=\"Made CourseController to handle the list\" />\r\n    <MESSAGE value=\"made method in Data to return info needed for course table\" />\r\n    <MESSAGE value=\" add a course to the table\" />\r\n    <MESSAGE value=\"construct project (havent dealt with locations, special instructions etc)\" />\r\n    <MESSAGE value=\"Model for project\" />\r\n    <MESSAGE value=\"Table not updating\" />\r\n    <MESSAGE value=\"close a course\" />\r\n    <MESSAGE value=\"close a project\" />\r\n    <MESSAGE value=\"fcheck\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fcheck\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/.idea/workspace.xml	(date 1713044671022)
@@ -4,7 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d5b992ee-9616-4c97-8ffa-72d485e94cfd" name="Changes" comment="close a project" />
+    <list default="true" id="d5b992ee-9616-4c97-8ffa-72d485e94cfd" name="Changes" comment="close a project">
+      <change afterPath="$PROJECT_DIR$/data.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/GradeModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/HelloController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/ProjectModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/objects/Course.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ca/ucalgary/groupprojectgui/util/FileSaver.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -20,7 +30,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="show-lists" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -67,7 +77,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "main",
+    "git-widget-placeholder": "project-grade-table-fix",
     "kotlin-language-version-configured": "true"
   }
 }]]></component>
@@ -94,6 +104,9 @@
       <list>
         <item itemvalue="Application.HelloApplication" />
         <item itemvalue="Application.HelloApplication" />
+        <item itemvalue="Application.HelloApplication" />
+        <item itemvalue="Application.HelloApplication" />
+        <item itemvalue="Application.HelloApplication" />
       </list>
     </recent_temporary>
   </component>
@@ -233,15 +246,7 @@
       <option name="project" value="LOCAL" />
       <updated>1712607712363</updated>
     </task>
-    <task id="LOCAL-00016" summary="fcheck">
-      <option name="closed" value="true" />
-      <created>1713044224674</created>
-      <option name="number" value="00016" />
-      <option name="presentableId" value="LOCAL-00016" />
-      <option name="project" value="LOCAL" />
-      <updated>1713044224674</updated>
-    </task>
-    <option name="localTasksCounter" value="17" />
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -282,7 +287,6 @@
     <MESSAGE value="Table not updating" />
     <MESSAGE value="close a course" />
     <MESSAGE value="close a project" />
-    <MESSAGE value="fcheck" />
-    <option name="LAST_COMMIT_MESSAGE" value="fcheck" />
+    <option name="LAST_COMMIT_MESSAGE" value="close a project" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.Menu?>\r\n<?import javafx.scene.control.MenuBar?>\r\n<?import javafx.scene.control.MenuItem?>\r\n<?import javafx.scene.control.Tab?>\r\n<?import javafx.scene.control.TabPane?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.BorderPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"448.0\" prefWidth=\"645.0\" xmlns=\"http://javafx.com/javafx/21\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"ca.ucalgary.groupprojectgui.HelloController\">\r\n    <children>\r\n        <MenuBar BorderPane.alignment=\"CENTER\">\r\n            <menus>\r\n                <Menu mnemonicParsing=\"false\" text=\"File\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#load\" text=\"Load\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#save\" text=\"Save\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#saveAs\" text=\"Save As\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#quit\" text=\"Quit\" />\r\n                    </items>\r\n                </Menu>\r\n                <Menu mnemonicParsing=\"false\" text=\"Edit\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" text=\"Delete\" />\r\n                    </items>\r\n                </Menu>\r\n                <Menu mnemonicParsing=\"false\" text=\"Help\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#about\" text=\"About\" />\r\n                    </items>\r\n                </Menu>\r\n            </menus>\r\n        </MenuBar>\r\n\r\n        <AnchorPane prefHeight=\"425.0\" prefWidth=\"625.0\">\r\n            <children>\r\n                <TabPane layoutX=\"-7.0\" layoutY=\"23.0\" prefHeight=\"362.0\" prefWidth=\"653.0\" tabClosingPolicy=\"UNAVAILABLE\">\r\n                    <tabs>\r\n                        <Tab text=\"Course List\">\r\n                            <content>\r\n                                <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"334.0\" prefWidth=\"598.0\">\r\n                                    <children>\r\n                                        <TableView fx:id=\"courseTableView\" layoutX=\"20.0\" layoutY=\"14.0\" prefHeight=\"285.0\" prefWidth=\"613.0\">\r\n                                            <columns>\r\n                                                <TableColumn fx:id=\"courseNameColumn\" prefWidth=\"121.0\" text=\"Course Name\" />\r\n                                                <TableColumn fx:id=\"profNameColumn\" prefWidth=\"172.0\" text=\"Professor Name\" />\r\n                                                <TableColumn fx:id=\"profEmailColumn\" prefWidth=\"203.0\" text=\"Professor Email\" />\r\n                                                <TableColumn fx:id=\"inProgressColumn\" prefWidth=\"116.0\" text=\"Status\" />\r\n                                            </columns>\r\n                                        </TableView>\r\n                                        <Button defaultButton=\"true\" layoutX=\"283.0\" layoutY=\"307.0\" mnemonicParsing=\"false\" onAction=\"#addCourse\" text=\"Add a Course\" />\r\n                                        <Button layoutX=\"66.0\" layoutY=\"307.0\" mnemonicParsing=\"false\" onAction=\"#closeCourse\" text=\"Close a Course\" />\r\n                                        <CheckBox fx:id=\"inProgressOnlyCheckBox\" layoutX=\"452.0\" layoutY=\"312.0\" mnemonicParsing=\"false\" onAction=\"#checkInProgressOnly\" text=\"Show In-Progress Courses Only\">\r\n                                            <font>\r\n                                                <Font size=\"11.0\" />\r\n                                            </font>\r\n                                        </CheckBox>\r\n                                    </children></AnchorPane>\r\n                            </content>\r\n                        </Tab>\r\n                        <Tab text=\"Project List\">\r\n                            <content>\r\n                                <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"405.0\" prefWidth=\"661.0\">\r\n                                    <children>\r\n                                        <TableView fx:id=\"projectTableView\" layoutX=\"14.0\" layoutY=\"14.0\" prefHeight=\"261.0\" prefWidth=\"626.0\">\r\n                                            <columns>\r\n                                                <TableColumn fx:id=\"projectTypeColumn\" prefWidth=\"66.5\" text=\"Type\" />\r\n                                                <TableColumn fx:id=\"projectNameColumn\" prefWidth=\"140.5\" text=\"Name\" />\r\n                                                <TableColumn fx:id=\"projectWeightColumn\" prefWidth=\"56.0\" text=\"Weight\" />\r\n                                                <TableColumn fx:id=\"projectDeadlineColumn\" prefWidth=\"127.0\" text=\"Deadline\" />\r\n                                                <TableColumn fx:id=\"projectPendingColumn\" minWidth=\"0.0\" prefWidth=\"118.0\" text=\"Status\" />\r\n                                    <TableColumn fx:id=\"projectSpecialColumn\" minWidth=\"0.0\" prefWidth=\"120.0\" text=\"Special\" />\r\n                                            </columns>\r\n                                        </TableView>\r\n                                        <Button defaultButton=\"true\" layoutX=\"283.0\" layoutY=\"294.0\" mnemonicParsing=\"false\" onAction=\"#addProject\" text=\"Add a Project\" />\r\n                                        <CheckBox fx:id=\"pendingOnlyCheckBox\" layoutX=\"460.0\" layoutY=\"299.0\" mnemonicParsing=\"false\" onAction=\"#checkPendingOnly\" text=\"Show Incomplete Projects Only\">\r\n                                            <font>\r\n                                                <Font size=\"11.0\" />\r\n                                            </font>\r\n                                        </CheckBox>\r\n                              <Button layoutX=\"31.0\" layoutY=\"294.0\" mnemonicParsing=\"false\" onAction=\"#closeProject\" text=\"Mark Project Complete\" />\r\n                                    </children></AnchorPane>\r\n                            </content>\r\n                        </Tab>\r\n                        <Tab text=\"Grades\">\r\n                            <content>\r\n                                <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\r\n                           <children>\r\n                              <TableView fx:id=\"gradeTableView\" layoutX=\"117.0\" layoutY=\"27.0\" prefHeight=\"253.0\" prefWidth=\"419.0\">\r\n                                <columns>\r\n                                  <TableColumn fx:id=\"gradeCourseNameColumn\" prefWidth=\"149.0\" text=\"Course Name\" />\r\n                                  <TableColumn fx:id=\"targetGradeColumn\" prefWidth=\"138.0\" text=\"Target \" />\r\n                                    <TableColumn fx:id=\"actualGradeColumn\" prefWidth=\"131.0\" text=\"Actual\" />\r\n                                </columns>\r\n                              </TableView>\r\n                              <CheckBox fx:id=\"gradeInProgressOnlyCheckBox\" layoutX=\"394.0\" layoutY=\"280.0\" mnemonicParsing=\"false\" prefHeight=\"5.0\" prefWidth=\"204.0\" text=\"Show In-Progress Courses Only\" />\r\n                              <Button layoutX=\"306.0\" layoutY=\"298.0\" mnemonicParsing=\"false\" onAction=\"#refreshGradeTable\" text=\"Refresh\" />\r\n                           </children></AnchorPane>\r\n                            </content>\r\n                        </Tab>\r\n                    </tabs>\r\n                </TabPane>\r\n            </children>\r\n        </AnchorPane>\r\n\r\n    </children>\r\n    <top>\r\n        <MenuBar BorderPane.alignment=\"CENTER\">\r\n            <menus>\r\n                <Menu mnemonicParsing=\"false\" text=\"File\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#load\" text=\"Load\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#save\" text=\"Save\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#saveAs\" text=\"Save As\" />\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#quit\" text=\"Quit\" />\r\n                    </items>\r\n                </Menu>\r\n                <Menu mnemonicParsing=\"false\" text=\"Edit\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" text=\"Delete\" />\r\n                    </items>\r\n                </Menu>\r\n                <Menu mnemonicParsing=\"false\" text=\"Help\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#about\" text=\"About\" />\r\n                    </items>\r\n                </Menu>\r\n            </menus>\r\n        </MenuBar>\r\n    </top>\r\n    <bottom>\r\n        <Label fx:id=\"status\" prefHeight=\"47.0\" prefWidth=\"464.0\" text=\"    \" BorderPane.alignment=\"CENTER\" />\r\n    </bottom>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml b/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml
--- a/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/resources/ca/ucalgary/groupprojectgui/hello-view.fxml	(date 1713044630543)
@@ -71,12 +71,12 @@
                                     <children>
                                         <TableView fx:id="projectTableView" layoutX="14.0" layoutY="14.0" prefHeight="261.0" prefWidth="626.0">
                                             <columns>
-                                                <TableColumn fx:id="projectTypeColumn" prefWidth="66.5" text="Type" />
-                                                <TableColumn fx:id="projectNameColumn" prefWidth="140.5" text="Name" />
-                                                <TableColumn fx:id="projectWeightColumn" prefWidth="56.0" text="Weight" />
-                                                <TableColumn fx:id="projectDeadlineColumn" prefWidth="127.0" text="Deadline" />
+                                                <TableColumn fx:id="projectTypeColumn" prefWidth="79.5" text="Type" />
+                                                <TableColumn fx:id="projectNameColumn" prefWidth="127.5" text="Name" />
+                                                <TableColumn fx:id="projectWeightColumn" prefWidth="62.0" text="Weight" />
+                                                <TableColumn fx:id="projectDeadlineColumn" prefWidth="121.0" text="Deadline" />
                                                 <TableColumn fx:id="projectPendingColumn" minWidth="0.0" prefWidth="118.0" text="Status" />
-                                    <TableColumn fx:id="projectSpecialColumn" minWidth="0.0" prefWidth="120.0" text="Special" />
+                                                <TableColumn fx:id="projectSpecialColumn" minWidth="0.0" prefWidth="120.0" text="Special" />
                                             </columns>
                                         </TableView>
                                         <Button defaultButton="true" layoutX="283.0" layoutY="294.0" mnemonicParsing="false" onAction="#addProject" text="Add a Project" />
@@ -85,24 +85,25 @@
                                                 <Font size="11.0" />
                                             </font>
                                         </CheckBox>
-                              <Button layoutX="31.0" layoutY="294.0" mnemonicParsing="false" onAction="#closeProject" text="Mark Project Complete" />
+                                        <Button layoutX="31.0" layoutY="294.0" mnemonicParsing="false" onAction="#closeProject" text="Mark Project Complete" />
                                     </children></AnchorPane>
                             </content>
                         </Tab>
                         <Tab text="Grades">
                             <content>
+                                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
                                 <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
-                           <children>
-                              <TableView fx:id="gradeTableView" layoutX="117.0" layoutY="27.0" prefHeight="253.0" prefWidth="419.0">
-                                <columns>
-                                  <TableColumn fx:id="gradeCourseNameColumn" prefWidth="149.0" text="Course Name" />
-                                  <TableColumn fx:id="targetGradeColumn" prefWidth="138.0" text="Target " />
-                                    <TableColumn fx:id="actualGradeColumn" prefWidth="131.0" text="Actual" />
-                                </columns>
-                              </TableView>
-                              <CheckBox fx:id="gradeInProgressOnlyCheckBox" layoutX="394.0" layoutY="280.0" mnemonicParsing="false" prefHeight="5.0" prefWidth="204.0" text="Show In-Progress Courses Only" />
-                              <Button layoutX="306.0" layoutY="298.0" mnemonicParsing="false" onAction="#refreshGradeTable" text="Refresh" />
-                           </children></AnchorPane>
+                                    <children>
+                                        <TableView fx:id="gradeTableView" layoutX="117.0" layoutY="27.0" prefHeight="253.0" prefWidth="419.0">
+                                            <columns>
+                                                <TableColumn fx:id="gradeCourseNameColumn" prefWidth="149.0" text="Course Name" />
+                                                <TableColumn fx:id="targetGradeColumn" prefWidth="138.0" text="Target " />
+                                                <TableColumn fx:id="actualGradeColumn" prefWidth="131.0" text="Actual" />
+                                            </columns>
+                                        </TableView>
+                                        <CheckBox fx:id="gradeInProgressOnlyCheckBox" layoutX="394.0" layoutY="280.0" mnemonicParsing="false" prefHeight="5.0" prefWidth="204.0" text="Show In-Progress Courses Only" />
+                                        <Button layoutX="306.0" layoutY="298.0" mnemonicParsing="false" onAction="#refreshGradeTable" text="Refresh" />
+                                    </children></AnchorPane>
                             </content>
                         </Tab>
                     </tabs>
Index: src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.ucalgary.groupprojectgui.util;\r\n\r\nimport ca.ucalgary.groupprojectgui.Data;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\n/**\r\n * ReadFile.java - reads stored data from a file.\r\n */\r\npublic class FileLoader {\r\n\r\n    /**\r\n     * Loads data from saved file.\r\n     *\r\n     * @param file input file to load data from\r\n     */\r\n    public static Data load(File file) {\r\n        Data data = new Data();\r\n        try(Scanner scanner = new Scanner(file)) {\r\n            String line1 = scanner.nextLine();\r\n            if (!line1.equals(\"Courses\")) {\r\n                System.err.println(\"Could not find course in file.\");\r\n                return null;\r\n            }\r\n            boolean foundProject = false;\r\n\r\n            while (scanner.hasNextLine()) {\r\n                String line = scanner.nextLine();\r\n                if (line.equals(\"Projects\")) {\r\n                    foundProject = true;\r\n                    break;\r\n                }\r\n                String[] parts = line.split(\",\");\r\n                String courseName = parts[0].trim();\r\n                String profName = parts[1];\r\n                String profEmail = parts[2];\r\n                double targetGrade = Double.parseDouble(parts[3]);\r\n                boolean inProgress = Boolean.parseBoolean(parts[4]);\r\n\r\n\r\n                boolean b = data.storeNewCourse(courseName, profName, profEmail, targetGrade);\r\n\r\n                if (!b) {\r\n                    System.err.println(\"Error in storing course.\");\r\n                }\r\n\r\n                if (!inProgress) {\r\n                    data.getCourse(courseName).closeCourse();\r\n                }\r\n\r\n            }\r\n\r\n            if (!foundProject) {\r\n                return data;\r\n            }\r\n\r\n            while (scanner.hasNextLine()) {\r\n                String line = scanner.nextLine();\r\n\r\n                String[] parts = line.split(\",\");\r\n                String course = parts[0];\r\n                String projectName = parts[1];\r\n                double projectWeight = Double.parseDouble(parts[2]);\r\n\r\n                String d = parts[3].trim();\r\n                String[] dates = d.split(\" \");\r\n                int[] deadline = new int[3];\r\n\r\n                for (int i = 0; i < dates.length; i++) {\r\n                    deadline[i] = Integer.parseInt(dates[i]);\r\n                }\r\n\r\n\r\n                    if (parts.length == 5) { // storing assignment\r\n                        String specialInstructions = parts[4];\r\n\r\n                        data.storeNewAssignment(course, projectName, projectWeight, deadline, specialInstructions);\r\n\r\n                    } else if (parts.length == 6) { // storing exam\r\n                        String location = parts[4];\r\n                        String reviewTopics = parts[5];\r\n\r\n                        data.storeNewExam(course, projectName, projectWeight, deadline, location, reviewTopics);\r\n\r\n                    }\r\n\r\n            }\r\n\r\n        } catch (IOException ioe){\r\n            System.err.println(\"Exception\");\r\n            return null;\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java b/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java
--- a/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java	(revision cea1cf6fcd47058d3e18f24e6719a1af6e90df2d)
+++ b/src/main/java/ca/ucalgary/groupprojectgui/util/FileLoader.java	(date 1713044630540)
@@ -47,6 +47,8 @@
 
                 if (!inProgress) {
                     data.getCourse(courseName).closeCourse();
+                } else{
+                    data.getCourse(courseName).setInProgress();
                 }
 
             }
